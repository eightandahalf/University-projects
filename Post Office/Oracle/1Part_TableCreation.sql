CREATE TABLE Manufacturers(Manufact_code INTEGER generated by default as identity(nocache),
                    MNF_name VARCHAR2(30) NOT NULL,
                    MNF_office_address VARCHAR2(40) NOT NULL,
					MNF_ceo_phone CHAR(17) NOT NULL,
                    PRIMARY KEY(Manufact_code),
                    CONSTRAINT MNF_uni_dir_phone UNIQUE(MNF_ceo_phone));

ALTER TABLE Manufacturers
ADD CONSTRAINT MNF_dir_phone
	CHECK(REGEXP_LIKE(MNF_ceo_phone, '^\+375\(\d{2}\)\d{3}-\d{2}-\d{2}$'));


CREATE TABLE Education_levels(EDCT_LVL_code INTEGER generated by default as identity(nocache),
                    EDCT_LVL_educational_background VARCHAR2(40) NOT NULL,
                    PRIMARY KEY(EDCT_LVL_code),
                    CONSTRAINT EDCT_LVF_educ_back UNIQUE(EDCT_LVL_educational_background));

CREATE TABLE Positions(Position_code INTEGER generated by default as identity(nocache),
                    PST_name VARCHAR2(30) NOT NULL,
                    PST_min_level_of_education_code INTEGER NOT NULL,
                    PST_min_salary INTEGER NOT NULL,
					PST_employee_availability VARCHAR2(3) NOT NULL,	
					PST_driver_license VARCHAR2(3) NOT NULL,
					PST_english_A2_required VARCHAR2(3) NOT NULL,
                    PRIMARY KEY(Position_code),
                    CONSTRAINT PST_avail_of_empl
                               CHECK(PST_employee_availability IN('Yes','No')),
					CONSTRAINT PST_drive_license
							   CHECK(PST_driver_license IN('Yes','No')),
					CONSTRAINT PST_english_req
							   CHECK(PST_english_A2_required IN('Yes','No')),
					CONSTRAINT PST_min_lvl_educ
							   FOREIGN KEY(PST_min_level_of_education_code)
							   REFERENCES Education_levels(EDCT_LVL_code) ON DELETE CASCADE);
							   
CREATE TABLE Vehicles_sellers(Seller_code INTEGER generated by default as identity(nocache),
                    SLR_phone CHAR(17) NOT NULL,
                    PRIMARY KEY(Seller_code),
                    CONSTRAINT SLR_phone_num
                                CHECK(REGEXP_LIKE(SLR_phone, '^\+375\(\d{2}\)\d{3}-\d{2}-\d{2}$')),
                    CONSTRAINT SLR_uni_phone UNIQUE(SLR_phone));

CREATE TABLE Orders(Order_num INTEGER generated by default as identity(nocache),
					ORD_sender_name VARCHAR2(40) NOT NULL,
					ORD_sender_address VARCHAR2(50) NOT NULL,
					ORD_sender_phone CHAR(17) NOT NULL,
					ORD_sending_office INTEGER NOT NULL,
					ORD_employee_placing_the_order_num INTEGER NOT NULL,
					ORD_package_weight DECIMAL(20,3) NOT NULL,
					ORD_package_scope DECIMAL(20,3) NOT NULL,
                    ORD_package_receipt_date DATE NOT NULL,
					ORD_declared_value_amount DECIMAL(30,3),
					ORD_cash_on_dlvry_amount DECIMAL(30,3),
					ORD_fragile VARCHAR2(3) NOT NULL,
					ORD_completeness_check VARCHAR2(3) NOT NULL,
                    ORD_arrival_date DATE,
					ORD_recipient_name VARCHAR2(40) NOT NULL,
					ORD_recipient_address VARCHAR2(50) NOT NULL,
					ORD_recipient_phone CHAR(17) NOT NULL,
					ORD_receiving_office INTEGER NOT NULL,
					ORD_shipping_cost DECIMAL(30,3) NOT NULL,
					ORD_deliv_type_code INTEGER NOT NULL,
					ORD_cash_payment VARCHAR2(3) NOT NULL,
					PRIMARY KEY(Order_num),
					CONSTRAINT ORD_sending_officce
							   FOREIGN KEY(ORD_sending_office)
							   REFERENCES Branch(Branch_num) ON DELETE CASCADE,
					CONSTRAINT ORD_receiving_office_num
							   FOREIGN KEY(ORD_receiving_office)
							   REFERENCES Branch(Branch_num) ON DELETE CASCADE,
					CONSTRAINT ORD_delivery_type_code
							   FOREIGN KEY(ORD_deliv_type_code)
							   REFERENCES Delivery_type(DLV_code) ON DELETE CASCADE,
					CONSTRAINT ORD_completeness_checking
							   CHECK(ORD_completeness_check IN('Yes','No')),
					CONSTRAINT ORD_cash_or_visa_payment
							   CHECK(ORD_cash_payment IN('Yes','No')),
					CONSTRAINT ORD_fragile_package
							   CHECK(ORD_fragile IN('Yes','No')),
					CONSTRAINT ORD_employ_placing_order_num
							   FOREIGN KEY(ORD_employee_placing_the_order_num)
							   REFERENCES Staff(Staff_num) ON DELETE CASCADE,
					CONSTRAINT ORD_recipient_phone_num
                               CHECK(REGEXP_LIKE(ORD_recipient_phone, '^\+375\(\d{2}\)\d{3}-\d{2}-\d{2}$')),
					CONSTRAINT ORD_sender_phone_num
                               CHECK(REGEXP_LIKE(ORD_sender_phone, '^\+375\(\d{2}\)\d{3}-\d{2}-\d{2}$')));  

CREATE TABLE Delivery_type(DLV_code INTEGER generated by default as identity(nocache),
                    DLV_delivery_method VARCHAR2(25) NOT NULL,
                    PRIMARY KEY(DLV_code),
                    CONSTRAINT DLV_unique_deliv_method UNIQUE(DLV_delivery_method));
	
CREATE TABLE Basket(Basket_code INTEGER generated by default as identity(nocache),
					Departure_num INTEGER NOT NULL,
                    Order_num INTEGER NOT NULL,
					CONSTRAINT Basket_departure_num_constr
							   FOREIGN KEY(Departure_num)
							   REFERENCES Departure(Departure_num) ON DELETE CASCADE,
					CONSTRAINT Basket_order_num_constr
							   FOREIGN KEY(Order_num)
							   REFERENCES Orders(Order_num)ON DELETE CASCADE);
							   
CREATE TABLE Vehicle(Vehicle_code INTEGER generated by default as identity(nocache),
					VIN VARCHAR2(20) NOT NULL,
                    VHC_model VARCHAR2(30) NOT NULL,
					VHC_gear_code INTEGER NOT NULL,
                    VHC_manufact_code INTEGER NOT NULL,
					VHC_max_load_capacity DECIMAL(30,3) NOT NULL,
					VHC_release_year DATE NOT NULL,
					VHC_inspection_date DATE NOT NULL,
					VHC_seller_code INTEGER NOT NULL,
                    PRIMARY KEY(Vehicle_code),
					CONSTRAINT VHC_sellers_code
							   FOREIGN KEY(VHC_seller_code)
							   REFERENCES Vehicles_sellers(Seller_code)ON DELETE CASCADE,
					CONSTRAINT VHC_manufacture_code
							   FOREIGN KEY(VHC_manufact_code)
							   REFERENCES Manufacturers(Manufact_code)ON DELETE CASCADE,
					CONSTRAINT VHC_gearbox_code
							   FOREIGN KEY(VHC_gear_code)
							   REFERENCES Gearbox(GEAR_code)ON DELETE CASCADE,
					CONSTRAINT VHC_unique_vin UNIQUE(VIN));

CREATE TABLE Gearbox(GEAR_code INTEGER generated by default as identity(nocache),
                    GEAR_type VARCHAR2(20) NOT NULL,
                    PRIMARY KEY(GEAR_code));
					
ALTER TABLE Gearbox
ADD CONSTRAINT GEAR_unique_type UNIQUE(GEAR_type);
					
CREATE TABLE Branch(Branch_num INTEGER generated by default as identity(nocache),
                    BR_max_storage_capacity DECIMAL(8,2) NOT NULL,
					BR_principal_employee_name VARCHAR2(30) NOT NULL,
					BR_principal_employee_phone CHAR(17) NOT NULL,
					BR_address VARCHAR2(50) NOT NULL,
					BR_employee_num INTEGER,
					BR_ceo_director INTEGER NOT NULL,
					PRIMARY KEY(Branch_num),
					CONSTRAINT BR_princ_employee_phone_num
                               CHECK(REGEXP_LIKE(BR_principal_employee_phone, '^\+375\(\d{2}\)\d{3}-\d{2}-\d{2}$')));

ALTER TABLE Branch
ADD CONSTRAINT BR_ceo
	   FOREIGN KEY(BR_ceo_director)
	   REFERENCES Staff(Staff_num)ON DELETE CASCADE;


CREATE TABLE Staff(Staff_num INTEGER generated by default as identity(nocache),
                    STF_name VARCHAR2(30) NOT NULL,
					STF_birth_date DATE NOT NULL,
					STF_address VARCHAR2(50) NOT NULL,
					STF_position_code INTEGER NOT NULL,
					STF_email VARCHAR2(30) NOT NULL,
					STF_passport_details VARCHAR2(30) NOT NULL,
					STF_branch_num INTEGER NOT NULL,
					STF_phone_num CHAR(17) NOT NULL,
					PRIMARY KEY(Staff_num),
					CONSTRAINT STF_position__code
							   FOREIGN KEY(STF_position_code)
							   REFERENCES Positions(Position_code)ON DELETE CASCADE,
					CONSTRAINT STF_branch_number
							   FOREIGN KEY(STF_branch_num)
							   REFERENCES Branch(Branch_num)ON DELETE CASCADE,
					CONSTRAINT STF_phone_num
                               CHECK(REGEXP_LIKE(STF_phone_num, '^\+375\(\d{2}\)\d{3}-\d{2}-\d{2}$')));
		
CREATE TABLE Departure(Departure_num INTEGER generated by default as identity(nocache),
                    Vehicle_code INTEGER NOT NULL,
					DPTR_sending_office_address VARCHAR2(50) NOT NULL,
					DPTR_staff_num INTEGER NOT NULL,
					DPTR_driver_departure_date DATE NOT NULL,
					PRIMARY KEY(Departure_num),
					CONSTRAINT DPTR_vehicle_code
							   FOREIGN KEY(Vehicle_code)
							   REFERENCES Vehicle(Vehicle_code)ON DELETE CASCADE);
							   
ALTER TABLE Departure
ADD CONSTRAINT DPTR_staff_number
               FOREIGN KEY(DPTR_staff_num)
			   REFERENCES Staff(Staff_num)ON DELETE CASCADE;
			  
begin
insert into Education_levels(EDCT_LVL_educational_background) values('Specialized medium');
insert into Education_levels(EDCT_LVL_educational_background) values('General average');
insert into Education_levels(EDCT_LVL_educational_background) values('Higher education');
end;
/

begin
insert into Manufacturers(MNF_name,MNF_office_address,MNF_ceo_phone) values('Volkswagen','Proyezd Kalvariyskiy 1, Minsk', '+375(44)141-12-12');
insert into Manufacturers(MNF_name,MNF_office_address,MNF_ceo_phone) values('Mercedes','Prospekte Pobeditelei 8, Minsk', '+375(44)331-33-12');
insert into Manufacturers(MNF_name,MNF_office_address,MNF_ceo_phone) values('Audi','Prospekte Pobeditelei 65, Minsk', '+375(44)531-23-12');
end;
/

begin
INSERT ALL
  INTO Positions VALUES (1, 'Employee', 1, 800, 'No', 'No', 'No')
  INTO Positions VALUES (2, 'Branch chief employee', 3, 1500, 'Yes', 'No', 'Yes')
  INTO Positions VALUES (3, 'Courier', 2, 1000, 'No', 'Yes', 'Yes')
  INTO Positions VALUES (4, 'Truck driver', 2, 900, 'No', 'Yes', 'No')
  INTO Positions VALUES (5, 'Branch network CEO', 3, 2000, 'Yes', 'No', 'Yes')
SELECT * FROM dual;
end;
/

begin
insert into Vehicles_sellers(SLR_phone) values('+375(29)132-15-12');
insert into Vehicles_sellers(SLR_phone) values('+375(44)135-16-96');
insert into Vehicles_sellers(SLR_phone) values('+375(44)123-12-53');
end;
/

begin
insert into Delivery_type(DLV_delivery_method) values('Courier');
insert into Delivery_type(DLV_delivery_method) values('Truck');
end;
/

begin
insert into Gearbox(GEAR_type) values('Automatic');
insert into Gearbox(GEAR_type) values('Mechanic');
end;
/

begin
insert into Branch(BR_max_storage_capacity,BR_principal_employee_name,BR_principal_employee_phone,BR_address,BR_employee_num,BR_ceo_director) values(20,'Zheldin A.A.','+375(25)542-35-11','Minsk, Chernyshevskogo street 20,3',4,16);
insert into Branch(BR_max_storage_capacity,BR_principal_employee_name,BR_principal_employee_phone,BR_address,BR_employee_num,BR_ceo_director) values(26,'Chernyak A.A.','+375(44)142-12-41','Minsk, 1 Berezova str.',4,16);
insert into Branch(BR_max_storage_capacity,BR_principal_employee_name,BR_principal_employee_phone,BR_address,BR_employee_num,BR_ceo_director) values(30,'Tikhonov F.P.','+375(25)008-70-12','Minsk, Jasminovaya str. 21',4,16);
insert into Branch(BR_max_storage_capacity,BR_principal_employee_name,BR_principal_employee_phone,BR_address,BR_employee_num,BR_ceo_director) values(100,'Medvedev A.F.','+375(44)533-22-12','Minsk, Domashnaya str. 22',3,16);
end;
/

begin
insert into Staff(STF_name,STF_birth_date,STF_address,STF_position_code,STF_email,STF_passport_details,STF_branch_num,STF_phone_num) values('Dedischev P.A.',DATE '2000-10-01','Minsk, Nezavisimosti Ave. 31,1',1,'dedishef2000@gmail.com','HB2331252',1,'+375(44)535-66-12');
insert into Staff(STF_name,STF_birth_date,STF_address,STF_position_code,STF_email,STF_passport_details,STF_branch_num,STF_phone_num) values('Zheldin A.A.',DATE '1990-02-24','Minsk, Chernyshevskogo street 20,3',2,'zheldin1990@gmail.com','HB1208912',1,'+375(25)542-35-11');
insert into Staff(STF_name,STF_birth_date,STF_address,STF_position_code,STF_email,STF_passport_details,STF_branch_num,STF_phone_num) values('Golubev D.V.',DATE '1978-02-01','Minsk, Manukevicha street 20,3',1,'golubeddddd@gmail.com','HB2304234',1,'+375(44)808-70-92');
insert into Staff(STF_name,STF_birth_date,STF_address,STF_position_code,STF_email,STF_passport_details,STF_branch_num,STF_phone_num) values('Petrova V.A.',DATE '2002-01-02','Minsk, Petrusya Brovka str. 20,3',3,'petrova3212@gmail.com','HB1121242',1,'+375(25)112-44-12');
insert into Staff(STF_name,STF_birth_date,STF_address,STF_position_code,STF_email,STF_passport_details,STF_branch_num,STF_phone_num) values('Lyadov O.V.',DATE '1990-02-27','Minsk, Leonida Beda str. 12,2',1,'lyyyaadov@gmail.com','HB1231001',2,'+375(44)110-09-97');
insert into Staff(STF_name,STF_birth_date,STF_address,STF_position_code,STF_email,STF_passport_details,STF_branch_num,STF_phone_num) values('Markov V.V.',DATE '1988-02-14','Minsk, Bratskaya str. 20',1,'markov1988@gmail.com','HB2233332',2,'+375(25)444-22-11');
insert into Staff(STF_name,STF_birth_date,STF_address,STF_position_code,STF_email,STF_passport_details,STF_branch_num,STF_phone_num) values('Chernyak A.A.',DATE '2000-10-20','Minsk, 1 Berezova str.',2,'chernyykkkk@gmail.com','HB0901232',2,'+375(44)142-12-41');
insert into Staff(STF_name,STF_birth_date,STF_address,STF_position_code,STF_email,STF_passport_details,STF_branch_num,STF_phone_num) values('Kirikovsky Y.A.',DATE '1981-02-16','Minsk, Vostochnaya str. 11, 1',3,'kirikirikiri81@gmail.com','HB2309099',2,'+375(25)392-37-77');
insert into Staff(STF_name,STF_birth_date,STF_address,STF_position_code,STF_email,STF_passport_details,STF_branch_num,STF_phone_num) values('Sokolov A.F.',DATE '1998-02-12','Minsk, Dachnaya str. 24,1',1,'sokosokolov@gmail.com','HB2304234',3,'+375(44)090-12-12');
insert into Staff(STF_name,STF_birth_date,STF_address,STF_position_code,STF_email,STF_passport_details,STF_branch_num,STF_phone_num) values('Mikhailov D.V.',DATE '1988-10-24','Minsk, Yesenina str. 12,4',1,'mihhhhaylov@gmail.com','HB8084151',3,'+375(25)987-12-31');
insert into Staff(STF_name,STF_birth_date,STF_address,STF_position_code,STF_email,STF_passport_details,STF_branch_num,STF_phone_num) values('Vasiliev D.D.',DATE '2001-11-01','Minsk, Yermaka str. 23',3,'vasssssssilyev@gmail.com','HB0801241',3,'+375(44)987-81-23');
insert into Staff(STF_name,STF_birth_date,STF_address,STF_position_code,STF_email,STF_passport_details,STF_branch_num,STF_phone_num) values('Tikhonov F.P.',DATE '2000-02-25','Minsk, Jasminovaya str. 21',2,'tyhonov2000@gmail.com','HB8293412',3,'+375(25)008-70-12');
insert into Staff(STF_name,STF_birth_date,STF_address,STF_position_code,STF_email,STF_passport_details,STF_branch_num,STF_phone_num) values('Medvedev A.F.',DATE '2001-01-16','Minsk, Domashnaya str. 22',2,'medveddddd@gmail.com','HB2080811',4,'+375(44)533-22-12');
insert into Staff(STF_name,STF_birth_date,STF_address,STF_position_code,STF_email,STF_passport_details,STF_branch_num,STF_phone_num) values('Ponomarev A.V.',DATE '1994-02-24','Gomel, 1 Kuibysheva str.',1,'pono1994pon@gmail.com','HB8972342',4,'+375(25)119-99-00');
insert into Staff(STF_name,STF_birth_date,STF_address,STF_position_code,STF_email,STF_passport_details,STF_branch_num,STF_phone_num) values('Shevchenko D.A.',DATE '1990-12-15','Minsk, Gvardeyskaya str. 34',3,'shEva2000@gmail.com','HB0808999',4,'+375(44)110-98-09');
insert into Staff(STF_name,STF_birth_date,STF_address,STF_position_code,STF_email,STF_passport_details,STF_branch_num,STF_phone_num) values('Zhmurkin S.A.',DATE '1989-01-14','Minsk, Pervomayskaya str. 12',5,'zhmurrrr89@gmail.com','HB8333123',4,'+375(44)097-80-91');
end;
/

begin
insert into VEHICLE(VIN,VHC_model,VHC_gear_code,VHC_manufact_code,VHC_max_load_capacity,VHC_release_year,VHC_inspection_date,VHC_seller_code) values('WBAGB330402182616','Caddy',1,1,1000,DATE '2005-10-24',DATE '2023-01-10',1);
insert into VEHICLE(VIN,VHC_model,VHC_gear_code,VHC_manufact_code,VHC_max_load_capacity,VHC_release_year,VHC_inspection_date,VHC_seller_code) values('WSDFB330423423422','Caddy',1,1,1000,DATE '2000-12-10',DATE '2023-01-13',1);
insert into VEHICLE(VIN,VHC_model,VHC_gear_code,VHC_manufact_code,VHC_max_load_capacity,VHC_release_year,VHC_inspection_date,VHC_seller_code) values('GAHDS234232325325','Caddy',1,1,1500,DATE '2010-11-12',DATE '2023-02-12',1);
insert into VEHICLE(VIN,VHC_model,VHC_gear_code,VHC_manufact_code,VHC_max_load_capacity,VHC_release_year,VHC_inspection_date,VHC_seller_code) values('DSFAW767357342311','Sprinter',1,2,3000,DATE '2012-05-23',DATE '2023-05-02',1);
end;
/

begin
insert into Departure(Vehicle_code,DPTR_sending_office_address,DPTR_staff_num,DPTR_driver_departure_date) values(1, 'Minsk, Chernyshevskogo street 20,3', 4, DATE '2023-03-31');
insert into Departure(Vehicle_code,DPTR_sending_office_address,DPTR_staff_num,DPTR_driver_departure_date) values(3, 'Minsk, Chernyshevskogo street 20,3', 4, DATE '2023-04-04');
insert into Departure(Vehicle_code,DPTR_sending_office_address,DPTR_staff_num,DPTR_driver_departure_date) values(4, 'Minsk, Chernyshevskogo street 20,3', 4, DATE '2023-04-20');
insert into Departure(Vehicle_code,DPTR_sending_office_address,DPTR_staff_num,DPTR_driver_departure_date) values(1, 'Minsk, Domashnaya str. 22', 8, DATE '2023-03-16');
end;
/

begin
insert into Orders(ORD_sender_name,ORD_sender_address,ORD_sender_phone,ORD_sending_office,ORD_employee_placing_the_order_num,ORD_package_weight,ORD_package_scope,ORD_package_receipt_date,ORD_declared_value_amount,ORD_cash_on_dlvry_amount,ORD_fragile,ORD_completeness_check,ORD_arrival_date,ORD_recipient_name,ORD_recipient_address,ORD_recipient_phone,ORD_receiving_office,ORD_shipping_cost,ORD_deliv_type_code,ORD_cash_payment) values('Arbuzov G.N.', 'Minsk, Pobediteley Ave. 47','+375(44)512-12-12',2,5,500,0.01,DATE '2023-03-30',20,50,'Yes','No',NULL,'Mishin P.P.','Vitebsk, Marochkina str. 23','+375(44)551-21-23',3,518.40,1,'Yes');
insert into Orders(ORD_sender_name,ORD_sender_address,ORD_sender_phone,ORD_sending_office,ORD_employee_placing_the_order_num,ORD_package_weight,ORD_package_scope,ORD_package_receipt_date,ORD_declared_value_amount,ORD_cash_on_dlvry_amount,ORD_fragile,ORD_completeness_check,ORD_arrival_date,ORD_recipient_name,ORD_recipient_address,ORD_recipient_phone,ORD_receiving_office,ORD_shipping_cost,ORD_deliv_type_code,ORD_cash_payment) values('Meshkova U.U.','Minsk, Zvyozdnaya str. 21','+375(44)998-09-12',2,3,800,0.03,DATE '2023-03-29',40,60,'No','Yes',NULL,'Zhukov F.F.','Minsk, Zybitskaya str. 34','+375(44)333-98-71',2,345.60,2,'No');
insert into Orders(ORD_sender_name,ORD_sender_address,ORD_sender_phone,ORD_sending_office,ORD_employee_placing_the_order_num,ORD_package_weight,ORD_package_scope,ORD_package_receipt_date,ORD_declared_value_amount,ORD_cash_on_dlvry_amount,ORD_fragile,ORD_completeness_check,ORD_arrival_date,ORD_recipient_name,ORD_recipient_address,ORD_recipient_phone,ORD_receiving_office,ORD_shipping_cost,ORD_deliv_type_code,ORD_cash_payment) values('Karginov F.V.','Minsk, Irkutskaya str. 10','+375(44)090-98-88',1,1,100,0.005,DATE '2023-03-30',10,20,'No','No',NULL,'Konyaev A.A.','Vitebsk, Korvata str. 53','+375(44)111-80-88',3,150.00,1,'No');
insert into Orders(ORD_sender_name,ORD_sender_address,ORD_sender_phone,ORD_sending_office,ORD_employee_placing_the_order_num,ORD_package_weight,ORD_package_scope,ORD_package_receipt_date,ORD_declared_value_amount,ORD_cash_on_dlvry_amount,ORD_fragile,ORD_completeness_check,ORD_arrival_date,ORD_recipient_name,ORD_recipient_address,ORD_recipient_phone,ORD_receiving_office,ORD_shipping_cost,ORD_deliv_type_code,ORD_cash_payment) values('Zubayraev A.A.','Minsk, Izmailova str. 23','+375(44)123-11-11',1,1,800,0.01,DATE '2023-01-04',29,40,'No','Yes',NULL,'Suleymanov V.V.','Vitebsk, Severnaya str. 12','+375(44)123-11-21',3,172.80,1,'Yes');
insert into Orders(ORD_sender_name,ORD_sender_address,ORD_sender_phone,ORD_sending_office,ORD_employee_placing_the_order_num,ORD_package_weight,ORD_package_scope,ORD_package_receipt_date,ORD_declared_value_amount,ORD_cash_on_dlvry_amount,ORD_fragile,ORD_completeness_check,ORD_arrival_date,ORD_recipient_name,ORD_recipient_address,ORD_recipient_phone,ORD_receiving_office,ORD_shipping_cost,ORD_deliv_type_code,ORD_cash_payment) values('Pavlovich T.I.','Minsk, 87 Karbysheva str.','+375(44)999-77-12',1,3,200,0.004,DATE '2023-04-04',40,50,'No','Yes',NULL,'Grishin A.K.','Minsk, Serova str. 81','+375(44)119-89-87',4,20.00,2,'Yes');
insert into Orders(ORD_sender_name,ORD_sender_address,ORD_sender_phone,ORD_sending_office,ORD_employee_placing_the_order_num,ORD_package_weight,ORD_package_scope,ORD_package_receipt_date,ORD_declared_value_amount,ORD_cash_on_dlvry_amount,ORD_fragile,ORD_completeness_check,ORD_arrival_date,ORD_recipient_name,ORD_recipient_address,ORD_recipient_phone,ORD_receiving_office,ORD_shipping_cost,ORD_deliv_type_code,ORD_cash_payment) values('Semenchik T.A.','Minsk, 1 Kirov str.','+375(44)442-12-42',2,5,500,0.002,DATE '2023-03-10',100,2000,'No','No',NULL,'Petrov A.A.','Minsk 81 Michurinskaya str.','+375(44)111-22-31',3,86.40,1,'Yes');
insert into Orders(ORD_sender_name,ORD_sender_address,ORD_sender_phone,ORD_sending_office,ORD_employee_placing_the_order_num,ORD_package_weight,ORD_package_scope,ORD_package_receipt_date,ORD_declared_value_amount,ORD_cash_on_dlvry_amount,ORD_fragile,ORD_completeness_check,ORD_arrival_date,ORD_recipient_name,ORD_recipient_address,ORD_recipient_phone,ORD_receiving_office,ORD_shipping_cost,ORD_deliv_type_code,ORD_cash_payment) values('Tishchenko F.F.','Minsk, 2, Kommunisticheskaya str.','+375(44)687-64-21',2,6,1000,0.001,DATE '2023-03-04',50,100,'Yes','No',NULL,'Kovalenko U.F.','Minsk, Zhemchuzhnaya str. 42','+375(44)982-17-20',3,172.80,2,'No');
insert into Orders(ORD_sender_name,ORD_sender_address,ORD_sender_phone,ORD_sending_office,ORD_employee_placing_the_order_num,ORD_package_weight,ORD_package_scope,ORD_package_receipt_date,ORD_declared_value_amount,ORD_cash_on_dlvry_amount,ORD_fragile,ORD_completeness_check,ORD_arrival_date,ORD_recipient_name,ORD_recipient_address,ORD_recipient_phone,ORD_receiving_office,ORD_shipping_cost,ORD_deliv_type_code,ORD_cash_payment) values('Zhukov F.A.','Minsk, 12 Krylovicha str.','+375(44)522-12-15',2,5,400,0.001,DATE '2023-03-05',100,1000,'No','Yes',NULL,'Melnikov J.V.','Minsk 34, Kuleshova str.','+375(44)412-31-24',3,69.12,1,'No');
end;
/


begin
insert into Basket (Departure_num, Order_num) values(1,3);
insert into Basket (Departure_num, Order_num) values(2,5);
insert into Basket (Departure_num, Order_num) values(2,1);
insert into Basket (Departure_num, Order_num) values(3,2);
insert into Basket (Departure_num, Order_num) values(3,4);
insert into Basket (Departure_num, Order_num) values(3,6);
insert into Basket (Departure_num, Order_num) values(4,7);
end;
/

-----------------------------------SYNONYM-----------------------------------

//////TABLE AVTOMOBILI OF USER SYNONYM_WORKSPACE
CREATE TABLE AVTOMOBILI(avto INTEGER generated by default as identity(nocache),
                    avto_name VARCHAR2(25) NOT NULL,
                    PRIMARY KEY(avto));
				
begin
insert into AVTOMOBILI(avto_name) values('lamborghini');
insert into AVTOMOBILI(avto_name) values('porshe');
end;
/
				
GRANT SELECT ON AVTOMOBILI TO iosu_labki;
//////

CREATE SYNONYM tachki for SYNONYM_WORKSPACE.AVTOMOBILI; 

-----------------------------------INDEX-----------------------------------

CREATE INDEX STF_name_i 
ON Staff(STF_name);

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Наиболее подходящими для индексации полями являются: поля внешних ключей; поля наиболее часто используемые в WHERE, GROUP BY, ORDER BY.

CACHE defines a number of values that Oracle should generate beforehand
to improve the performance. You use this option for the column that has 
a high number of inserts.

ALTER SESSION SET NLS_DATE_FORMAT = 'DD-MM-YYYY';
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

------------------------CHECKING ALL INDEXES FOR A TABLE-----------------------------------------------------------
SELECT 
    index_name, 
    index_type, 
    visibility, 
    status 
FROM 
    all_indexes
WHERE 
    table_name = 'STAFF';
-------------------------------------------------------------------------------------------------------------------

------------------------CHECKING CPU COSTS FOR SELECT OPERATION WITH INDEX-----------------------------------------
EXPLAIN PLAN FOR
SELECT * FROM STAFF
WHERE STF_name = 'Dedischev P.A.';

SELECT 
    PLAN_TABLE_OUTPUT 
FROM 
    TABLE(DBMS_XPLAN.DISPLAY());
-------------------------------------------------------------------------------------------------------------------

-----------------------CHECKING CPU COSTS FOR SELECT OPERATION WITHOUT INDEX---------------------------------------
EXPLAIN PLAN FOR
SELECT * FROM VEHICLE
WHERE VHC_model = 'Caddy';

SELECT 
    PLAN_TABLE_OUTPUT 
FROM 
    TABLE(DBMS_XPLAN.DISPLAY());

----------------------CHECKING CPU COSTS FOR SELECT OPERATION WITH INDEX
CREATE INDEX VHC_model_i 
ON Vehicle(VHC_model);

EXPLAIN PLAN FOR
SELECT * FROM VEHICLE
WHERE VHC_model = 'Caddy';

SELECT 
    PLAN_TABLE_OUTPUT 
FROM 
    TABLE(DBMS_XPLAN.DISPLAY());